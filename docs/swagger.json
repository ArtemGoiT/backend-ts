{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Students app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of students app"
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "tags": [
    {
      "name": "Water",
      "description": "Operations about water."
    },
    {
      "name": "Users",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User registration",
        "operationId": "registerUser",
        "description": "Register a new user",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "format": "email",
                    "example": "user@gmail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "123123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/registerUser"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User login",
        "operationId": "loginUser",
        "description": "Login an existing user",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "format": "email",
                    "example": "user@gmail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "123123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "User data with default values (if the user hasn't changed their profile)",
                      "type": "object",
                      "required": [
                        "status",
                        "message",
                        "data"
                      ],
                      "properties": {
                        "status": {
                          "type": "integer",
                          "example": 200
                        },
                        "message": {
                          "type": "string",
                          "example": "Succesfully loged in an user!"
                        },
                        "data": {
                          "type": "object",
                          "required": [
                            "accessToken",
                            "user"
                          ],
                          "properties": {
                            "accessToken": {
                              "type": "string",
                              "example": "YBi2qJZtTZxXKgWWiPj7GSMRFdCHNUFtwOq8ORqO"
                            },
                            "user": {
                              "$ref": "#/components/schemas/registerUser"
                            }
                          }
                        }
                      }
                    },
                    {
                      "description": "User data with updated profile information",
                      "type": "object",
                      "required": [
                        "status",
                        "message",
                        "data"
                      ],
                      "properties": {
                        "status": {
                          "type": "integer",
                          "example": 200
                        },
                        "message": {
                          "type": "string",
                          "example": "Succesfully loged in an user!"
                        },
                        "data": {
                          "type": "object",
                          "required": [
                            "accessToken",
                            "user"
                          ],
                          "properties": {
                            "accessToken": {
                              "type": "string",
                              "example": "YBi2qJZtTZxXKgWWiPj7GSMRFdCHNUFtwOq8ORqO"
                            },
                            "user": {
                              "$ref": "#/components/schemas/patchUser"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User logout",
        "operationId": "logoutUser",
        "description": "Logs out the current user by deleting the session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logged out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged out"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/refresh": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Refresh user session",
        "operationId": "refreshUserSession",
        "description": "Refreshes the user session by using the provided session ID and refresh token stored in cookies",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "sessionId",
            "schema": {
              "type": "string",
              "description": "The session ID stored in the cookies."
            },
            "required": true
          },
          {
            "in": "cookie",
            "name": "refreshToken",
            "schema": {
              "type": "string",
              "description": "The refresh token stored in the cookies."
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully refreshed a session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "description": "The new access token for the refreshed session",
                          "type": "string",
                          "example": "newAccessTokenValue"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/data": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get information about the current user",
        "operationId": "getCurrentUser",
        "description": "Retrieves the information of the currently authenticated user. Authentication is required via Bearer token in the Authorization header",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user data",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "User data with default values (if the user hasn't changed their profile)",
                      "type": "object",
                      "required": [
                        "status",
                        "message",
                        "data"
                      ],
                      "properties": {
                        "status": {
                          "type": "integer",
                          "example": 200
                        },
                        "message": {
                          "type": "string",
                          "example": "Successfully retrieved user information"
                        },
                        "data": {
                          "type": "object",
                          "required": [
                            "user"
                          ],
                          "properties": {
                            "user": {
                              "$ref": "#/components/schemas/registerUser"
                            }
                          }
                        }
                      }
                    },
                    {
                      "description": "User data with updated profile information",
                      "type": "object",
                      "required": [
                        "status",
                        "message",
                        "data"
                      ],
                      "properties": {
                        "status": {
                          "type": "integer",
                          "example": 200
                        },
                        "message": {
                          "type": "string",
                          "example": "Successfully retrieved user information"
                        },
                        "data": {
                          "type": "object",
                          "required": [
                            "user"
                          ],
                          "properties": {
                            "user": {
                              "$ref": "#/components/schemas/patchUser"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/updateData": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update date User",
        "operationId": "updateUser",
        "description": "Update user information. Data is taken from the token, so no user ID is needed in the parameters",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "format": "email",
                    "example": "user@gmail.com"
                  },
                  "name": {
                    "description": "User's name (optional, defaults to 'User')",
                    "type": "string",
                    "example": "Masha"
                  },
                  "gender": {
                    "description": "User's gender (optional, defaults to 'woman')",
                    "type": "string",
                    "enum": [
                      "woman",
                      "man"
                    ],
                    "example": "woman"
                  },
                  "dailyNorma": {
                    "description": "User's dialy water consumption in liters(optional, defaults '1.5')",
                    "type": "number",
                    "example": 1.5
                  },
                  "weight": {
                    "description": "User's weight in kilograms",
                    "type": "number",
                    "example": 65
                  },
                  "activeSportTime": {
                    "description": "User's  time of active participation in sports",
                    "type": "number",
                    "example": 5
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated the user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "user"
                      ],
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/patchUser"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/users/updateAvatar": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update User's avatar",
        "operationId": "updateUserAvatar",
        "description": "Update user avatar. Data is taken from the token, so no user ID is needed in the parameters",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "description": " Link to user photo",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update the user's avatar",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated the user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "user"
                      ],
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/patchUser"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "registerUser": {
        "type": "object",
        "required": [
          "_id",
          "email"
        ],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "66e69d630a8a440495bed3cc"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "format": "email",
            "example": "user@gmail.com"
          },
          "name": {
            "description": "User's name (optional, defaults to 'User')",
            "type": "string",
            "example": "Masha"
          },
          "gender": {
            "description": "User's gender (optional, defaults to 'woman')",
            "type": "string",
            "enum": [
              "woman",
              "man"
            ],
            "example": "woman"
          },
          "dailyNorma": {
            "description": "User's dialy water consumption in liters(optional, defaults '1.5')",
            "type": "number",
            "example": 1.5
          }
        }
      },
      "patchUser": {
        "type": "object",
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "66e69d630a8a440495bed3cc"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "format": "email",
            "example": "user@gmail.com"
          },
          "name": {
            "description": "User's name (optional, defaults to 'User')",
            "type": "string",
            "example": "Masha"
          },
          "gender": {
            "description": "User's gender (optional, defaults to 'woman')",
            "type": "string",
            "enum": [
              "woman",
              "man"
            ],
            "example": "woman"
          },
          "dailyNorma": {
            "description": "User's dialy water consumption in liters(optional, defaults '1.5')",
            "type": "number",
            "example": 1.5
          },
          "weight": {
            "description": "User's weight in kilograms",
            "type": "number",
            "example": 65
          },
          "activeSportTime": {
            "description": "User's  time of active participation in sports",
            "type": "number",
            "example": 5
          },
          "avatar": {
            "description": " Link to user photo",
            "type": "string",
            "format": "binary"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "User not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Email already exists",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "Email in use"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    }
  }
}