tags:
  - Water
summary: 'Add a new water record'
operationId: addWater
description: 'Add a water record with data'
security:
  - bearerAuth: []
requestBody:
  content:
    application/json:
      schema:
        type: object
        required:
          - amount
          - day
          - month
          - year
          - time
        properties:
          amount:
            description: 'The amount of water consumed (in milliliters).'
            type: number
            format: float
            example: 250
            minimum: 50
            maximum: 10000
          day:
            description: 'The day of the water record (in format DD).'
            type: string
            example: '05'
            pattern: '^(0[1-9]|[12][0-9]|3[01])$'
          month:
            description: 'The month of the water record (in format MM).'
            type: string
            example: '09'
            pattern: '^(0[1-9]|1[0-2])$'
          year:
            description: 'The year of the water record (in format YYYY).'
            type: string
            example: '2024'
            pattern: '^\d{4}$'
          time:
            description: 'The time of the water record (in format HH:mm).'
            type: string
            example: '12:30'
            pattern: '^([0-1]\d|2[0-3]):([0-5]\d)$'
  description: 'Details to create a water record.'
responses:
  '201':
    description: 'Water intake record successfully created'
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 201
            message:
              type: string
              example: 'Successfully added water!'
            data:
              type: object
              $ref: ../../components/schemas/water/water.yaml
              description: 'Water record object.' 
  '400':
    description: 'Bad request, invalid input data.'
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
          properties:
            status:
              type: integer
              example: 400
            message:
              type: string
              example: 'You cannot add water for a future date.'
  '404':
    description: 'Missing required fields.'
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: integer
              example: 404
            message:
              type: string
              example: 'All fields are required.'
  '500':
    $ref: ../../components/responses/water/500-0.yaml
